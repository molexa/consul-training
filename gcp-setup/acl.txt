########### ACL - server noda

cat << EOF >> /etc/consul.d/consul.hcl
acl{
  enabled = true
  default_policy = "allow"
  enable_token_persistence = true
}
EOF

consul acl bootstrap -token=138ad8d7-25b9-d7ff-5017-82d88606313d

CONSUL_HTTP_TOKEN=138ad8d7-25b9-d7ff-5017-82d88606313d
export CONSUL_HTTP_TOKEN

/etc/consul.d/consul.hcl:
acl{
  enabled = true
  default_policy = "deny"
  enable_token_persistence = true
  tokens {
    agent  = "$CONSUL_HTTP_TOKEN"
  }
}
EOF

systemctl restart consul

########## ACL - agenti

GUI:
node_prefix "" {
  policy = "write"
}

CONSUL_HTTP_TOKEN=cb84f686-b5bd-4e7b-684d-e250e3b4b333
export CONSUL_HTTP_TOKEN

cat << EOF >> /etc/consul.d/consul.hcl
acl{
  enabled = true
  default_policy = "deny"
  enable_token_persistence = true
  tokens {
    agent  = "$CONSUL_HTTP_TOKEN"
  }
}
EOF

systemctl restart consul
consul catalog nodes
consul catalog services

########## DNS policy - server

cat << EOF > /root/dns-policy.hcl
node_prefix "" {
  policy = "read"
}
service_prefix "" {
  policy = "read"
}
EOF

consul acl policy create -name dns-read -rules @/root/dns-policy.hcl
consul acl token update -id anonymous -policy-name=dns-read

########### ACL - servicy
consul acl token create -description "Token for hello-service-fe-team" -service-identity "hello-service-fe-team"

hello.json:
service {
...
"token": "0a7afab7-fb9d-9035-7143-de1de68dc6ea"
}

systemctl restart consul
